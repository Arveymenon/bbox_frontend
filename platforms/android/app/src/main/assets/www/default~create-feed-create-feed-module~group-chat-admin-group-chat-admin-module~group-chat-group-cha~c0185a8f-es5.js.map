{"version":3,"sources":["./src/app/services/helper.service.ts"],"names":[],"mappings":"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","file":"default~create-feed-create-feed-module~group-chat-admin-group-chat-admin-module~group-chat-group-cha~c0185a8f-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\nimport { Storage } from '@ionic/storage';\nimport { Location } from '@angular/common';\nimport { GroupService } from '../shared/group.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { File, FileEntry } from '@ionic-native/file/ngx';\nimport { ActionSheetController, LoadingController, NavController, ToastController, ModalController, Platform } from '@ionic/angular';\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer/ngx';\nimport { ImagePicker } from '@ionic-native/image-picker/ngx';\nimport { Camera, PictureSourceType, CameraOptions } from '@ionic-native/camera/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { FilePath } from '@ionic-native/file-path/ngx';\nimport { FileChooser } from '@ionic-native/file-chooser/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\nimport { Socket } from 'ngx-socket-io';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\n\nconst STORAGE_KEY = 'my_files';\nconst STORAGE_DIRECTORY = 'B-Box Files'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n  docs: any[];\n  images: any[];\n  currentFileType: any;\n  ANDROID_PERMISSIONS = [\n    'android.permission.READ_EXTERNAL_STORAGE',\n    'android.permission.WRITE_EXTERNAL_STORAGE',\n  ];\n  uploading: boolean;\n  user_id: any;\n\n  constructor(\n    public route: ActivatedRoute,\n    public storage: Storage,\n    public location: Location,\n    private formBuilder: FormBuilder,\n    public groupService: GroupService,\n    private router: Router,\n    private sanitizer: DomSanitizer, \n    private file: File, \n    private actionSheetCtrl: ActionSheetController, \n    private transfer: FileTransfer,\n    private loadingCtrl: LoadingController, \n    private imagePicker: ImagePicker, \n    public navCtrl: NavController, \n    // public navParams: NavParams,\n    public toastCtrl: ToastController,\n    private camera: Camera, \n    public modalCtrl: ModalController, \n    private webview: WebView,\n    private platform: Platform,\n    private filePath: FilePath,\n    private fileChooser: FileChooser,\n    private http: HttpClient,\n    private androidPermissions: AndroidPermissions,\n    private socket: Socket,\n    public modalController: ModalController,\n    public translate: TranslateService,\n    private fileOpener: FileOpener\n  ) {\n    this.storage.get('id').then((val: any) => {\n      if(val){\n        this.user_id = val\n      }\n    });\n  }\n\n\n  loadStoredImages() {\n    this.storage.get(STORAGE_KEY).then(images => {\n      if (images) {\n        let arr = JSON.parse(images);\n        this.images = [];\n        for (let img of arr) {\n          let filePath = this.file.dataDirectory + img;\n          let resPath = this.pathForImage(filePath);\n          this.images.push({ name: img, path: resPath, filePath: filePath });\n        }\n      }\n    });\n  }\n\n  async selectImage() {\n    return new Promise(async (resolve, reject) => {\n      if(!this.platform.is('ios') && !this.platform.is('android')) {\n        console.log('desktop')\n        document.getElementById('image').click();\n      }\n      else {\n        const actionSheet = await this.actionSheetCtrl.create({\n          header: \"Select Image source\",\n          buttons: [{\n            text: 'Load from Library',\n            icon: 'ios-grid',\n            handler: () => {\n              this.takePicture(this.camera.PictureSourceType.PHOTOLIBRARY)\n              .then(taken => {\n                if(taken){\n                  resolve({\n                    images: this.images,\n                    docs: this.docs,\n                  });\n                }\n              });\n            }\n          },\n          {\n            text: 'Use Camera',\n            icon: 'camera',\n            handler: () => {\n              this.takePicture(this.camera.PictureSourceType.CAMERA)\n              .then(taken => {\n                if(taken){\n                  resolve({\n                    images: this.images,\n                    docs: this.docs,\n                  })\n                }\n              })\n            }\n          },\n          {\n            icon: 'close',\n            text: 'Cancel',\n            role: 'cancel'\n          }]\n        });\n        await actionSheet.present();\n      }\n    });\n  }\n  \n  takePicture(sourceType: PictureSourceType) {\n    return new Promise((resolve, reject) => {\n      var options: CameraOptions = {\n          quality: 65,\n          sourceType: sourceType,\n          saveToPhotoAlbum: false,\n          correctOrientation: true\n      };\n\n      this.camera.getPicture(options)\n        .then(imagePath => {\n          this.startProcess(imagePath, 'image', sourceType)\n            .then((started: any) => {\n              this.copyFileToLocalDir(started.path, started.name, started.createdName)\n                .then((copy: any) => {\n                  this.updateStoredFiles(copy.newFileName, copy.currentName)\n                    .then(updated => {\n                      if(updated){\n                        resolve({\n                          images: this.images,\n                          docs: this.docs,\n                        })\n                      }\n                      else{\n                        reject(updated);\n                      }\n                    });\n                });\n            });\n        });\n    });\n  }\n\nselectVideoFromGallery() {\n  return new Promise((resolve, reject) => {\n    if(!this.platform.is('ios') && !this.platform.is('android')){\n      console.log('desktop')\n      document.getElementById('video').click();\n    }\n    else {\n      const options: CameraOptions = {\n        quality: 65,\n        destinationType: this.camera.DestinationType.FILE_URI,\n        mediaType: this.camera.MediaType.VIDEO,\n        sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\n      }\n    \n      this.camera.getPicture(options)\n        .then(imagePath => {\n          this.startProcess(imagePath, 'video', this.camera.PictureSourceType.PHOTOLIBRARY)\n            .then((started: any) => {\n              this.copyFileToLocalDir(started.path, started.name, started.createdName)\n                .then((copy: any) => {\n                  this.updateStoredFiles(copy.newFileName, copy.currentName)\n                    .then(updated => {\n                      if(updated){\n                        resolve({\n                          images: this.images,\n                          docs: this.docs,\n                        });\n                      }\n                    });\n                });\n            }); \n        });                  \n    }\n  });\n}\n\nstartProcess(file, type, sourceType){\n  return new Promise((resolve, reject) => {\n    this.docs = [];\n    this.images = [];\n    console.log(\"PROCESS STARTED\");\n    this.currentFileType = type;\n    if ((this.platform.is('android') && sourceType === this.camera.PictureSourceType.PHOTOLIBRARY) || (this.platform.is('android') && type == 'doc')) {\n          console.log(\"FILE: \", file)\n          let path = file.toString();\n          if(type != 'doc'){\n            file = path.indexOf('file://') > -1 ? file : 'file://' + file.toString() ;\n          }\n          this.filePath.resolveNativePath(file)\n              .then(filePath => {\n                  console.log(\"FILE PATH\", filePath);\n                  let correctPath = filePath.substr(0, filePath.lastIndexOf('/') + 1);\n                  let currentName = new String();\n                  if(type === 'image'){\n                    currentName = file.substring(file.lastIndexOf('/') + 1, file.lastIndexOf('?'));\n                  }\n                  else {\n                    currentName = filePath.substring(filePath.lastIndexOf('/') + 1);\n                  }\n\n                  resolve({\n                    path: correctPath,\n                    name: currentName,\n                    createdName: this.createFileName(filePath.substring(filePath.lastIndexOf('/') + 1))\n                  });\n              }); \n      } else {\n          var currentName = file.substr(file.lastIndexOf('/') + 1);\n          var correctPath = file.substr(0, file.lastIndexOf('/') + 1);\n          resolve({\n            path: correctPath,\n            name: currentName,\n            createdName: this.createFileName(file.lastIndexOf('/') + 1)\n          });\n      }\n  });\n}\n\n  createFileName(fileName) {\n    let ext = this.getFileExtension(fileName)\n    console.log(\"EXT\", ext);\n    var d = new Date(),\n        n = d.getTime(),\n        newFileName = n + '.' + ext;\n        console.log(\"FILE NAME\", fileName)\n    return newFileName;\n  }\n\n  copyFileToLocalDir(namePath, currentName, newFileName) {\n    return new Promise((resolve, reject) => {\n      this.checkPermissions().then(() => {\n        this.file.copyFile(namePath, currentName, this.file.dataDirectory, newFileName).then(success => {\n          this.file.copyFile(namePath, currentName, this.file.externalRootDirectory + '/' + STORAGE_DIRECTORY, newFileName).then(success => {\n            if(success){\n              console.log('Saved to Local Storage');\n              resolve({\n                newFileName: newFileName,\n                currentName: currentName\n              })\n            }\n          }, err => {\n            console.log('Error Saving to Local Storage', err)\n            reject(err)\n          });\n          \n        }, error => {\n            console.log(\"COULD NOT STORE FILE\", error)\n            // let value = this.translate.instant('Error_while_storing_file', { value: this.lang });\n            this.presentToast(\"Error_while_storing_file\");\n            reject(error)\n        });\n      })\n    });\n  }\n\n  updateStoredFiles(name, oldName) {\n    return new Promise((resolve, reject) => {\n      this.storage.get(STORAGE_KEY).then(files => {\n        let arr = JSON.parse(files);\n        if (!arr) {\n            let newFiles = [name];\n            this.storage.set(STORAGE_KEY, JSON.stringify(newFiles));\n        } else {\n            arr.push(name);\n            this.storage.set(STORAGE_KEY, JSON.stringify(arr));\n        }\n  \n        let filePath = this.file.dataDirectory + name;\n        //IF NOT DOC\n        if(this.currentFileType != 'doc'){\n          let resPath = this.pathForImage(filePath);\n\n          let newEntry = {\n              name: name,\n              path: resPath,\n              filePath: filePath,\n              displayName: oldName\n          };\n\n          this.images = [newEntry, ...this.images];\n          console.log(\"NEW IMGS\", this.images)\n        }\n        //IF DOC\n        else {\n          let newEntry = {\n            name: name,\n            filePath: filePath\n          };\n\n          this.docs = [newEntry, ...this.docs];\n          console.log(\"NEW DOCS\", this.docs)\n        }\n\n        resolve(true);\n      })\n      .catch(err => reject(err));\n    });\n  }\n\n  pathForImage(img) {\n    if (img === null) {\n      return '';\n    } else {\n      let converted = this.webview.convertFileSrc(img);\n      return converted;\n    }\n  }\n\n  deleteFile(fileEntry, position) {\n    this.images.splice(position, 1);\n\n    this.storage.get(STORAGE_KEY).then(images => {\n        const arr = JSON.parse(images);\n        const filtered = arr.filter(name => name != fileEntry.name);\n        this.storage.set(STORAGE_KEY, JSON.stringify(filtered));\n\n        // tslint:disable-next-line: prefer-const\n        let correctPath = fileEntry.filePath.substr(0, fileEntry.filePath.lastIndexOf('/') + 1);\n\n        this.file.removeFile(correctPath, fileEntry.name).then(res => {\n          // let value = this.translate.instant('File_removed', { value: this.lang });\n            this.presentToast(\"File_removed\");\n        });\n    });\n  }\n\n  // startUpload() {\n  //   this.uploading = true;\n  //   console.log(this.uploading);\n  //   console.log('STARTED UPLOAD');\n  //   if(this.images){\n  //     this.images.forEach(imgEntry => {\n  //       this.getFileFromLocal(imgEntry.filePath)\n  //     });  \n  //   }\n  //   if(this.docs){\n  //     this.docs.forEach(docEntry => {\n  //         this.getFileFromLocal(docEntry.filePath)\n  //       });\n  //   }\n  // }\n\n  // getFileFromLocal(entry){\n  //   this.file.resolveLocalFilesystemUrl(entry)\n  //         .then(entry => {\n  //             ( < FileEntry > entry).file(file => this.readFile(file))\n  //         })\n  //         .catch(err => {\n  //           // let value = this.translate.instant('Error_while_reading_file', { value: this.lang });\n  //             this.presentToast(\"Error_while_reading_file\");\n  //         });\n  // }\n\n  // readFile(file: any) {\n  //   console.log(\"FILE TYPE\",file.type);\n  //   const reader = new FileReader();\n  //   reader.onloadend = () => {\n  //       const formData = new FormData();\n  //       const fileBlob = new Blob([reader.result], {\n  //           type: file.type\n  //       });\n  //       formData.append('image', fileBlob, file.name);\n  //       this.uploadFileData(formData, file.name);\n  //   };\n  //   reader.readAsArrayBuffer(file);\n  // }\n\n  // async uploadFileData(formData: FormData, name) {\n  //   const uploadCall = this.http.post(\"http://198.12.92.202:5000/upload/single-file\", formData)\n  //       .subscribe((res) => {\n  //             console.log(res)\n  //             console.log(res['error'])\n  //             if (res['error']) {\n  //               // let value = this.translate.instant('File_upload_failed', { value: this.lang });\n  //                 this.presentToast(\"File_upload_failed\");\n  //             } else {\n  //               // let value = this.translate.instant('File_upload_success', { value: this.lang });\n  //                 this.presentToast(\"File_upload_success\");\n  //                 console.log(\"SUCCESS IS WORKING\")\n\n  //                 let file_message = this.groupform.value;\n  //                 file_message.messageBy = this.adminidval;\n  //                 file_message.attachment = name\n  //                 file_message.file = true\n  //                 file_message.fileType = this.currentFileType;\n  //                 file_message.messageFor = this.video_members;\n  //                 this.cleanUpload(file_message);\n  //             }\n  //           },err => {\n  //             console.log(\"UPLOAD FAILED\", err)\n  //             this.uploading = false;\n  //             this.images = [];\n  //             this.docs = [];\n  //           })\n  // }\n\n  // cleanUpload(file_message){\n  //   console.log(\"FILE MESSAGE\", file_message);\n  //   this.groupService.putChat(file_message, this.id).subscribe((res) => {\n  //     this.uploading = false;\n  //     this.images = [];\n  //     this.docs = [];\n  //     this.socket.emit('send-message', { \n  //       text: file_message.message, \n  //       room: this.chat_room,\n  //       sent_from: this.temp_name,\n  //       type: 1, // 1-> text,\n  //       messageFor: file_message.messageFor\n  //     })\n  //     this.reset();\n  //     this.currentFileType = new String();\n  //     this.router.navigate(['group-chat-admin',this.chat_room]);\n  //     // this.groupchatadmin.chatData();\n  //     // this.location.back();\n  //     this.ref.detectChanges();\n  //   });\n  // }\n\n  getExt(entry) {\n    var file = entry.path.toString();\n    var splits = file.split('.');\n    var ext = splits[(splits.length - 1)];\n    var isnum = /^\\d+$/.test(ext);\n    if (ext == 'jpg' || ext == 'jpeg' || ext == 'png' || ext == 'gif' || ext == '' || isnum == true || file.includes('data:image')) {\n      return 'image';\n    }\n    else {\n      return 'video';\n    }\n  }\n\n  getFileExtension(entry){\n    var file = entry.toString();\n    var splits = file.split('.');\n    var ext = splits[(splits.length - 1)];\n    return ext;\n  }\n\n\n  async selectAFile() {\n    return new Promise((resolve, reject) => {\n      this.fileChooser.open().then(fileURI => {\n        this.startProcess(fileURI, 'doc', null)\n        .then((started: any) => {\n          this.copyFileToLocalDir(started.path, started.name, started.createdName)\n            .then((copy: any) => {\n              this.updateStoredFiles(copy.newFileName, copy.currentName)\n                .then(updated => {\n                  if(updated){\n                    resolve({\n                      images: this.images,\n                      docs: this.docs,\n                    })\n                  }\n                  else{\n                    reject(updated);\n                  }\n                })\n            })\n            .catch(err => reject(err));\n        })\n        .catch(err => reject(err));\n      })\n      .catch(err => reject(err));\n    })\n  }\n\n  openFile(fileName) {\n    return new Promise((resolve, reject) => {\n\n      this.file.readAsDataURL(this.file.externalRootDirectory + '/' + STORAGE_DIRECTORY, fileName).then((str) => {\n        const str1 = str.split(';');\n        const str2 = str1[0].split(':');\n        console.log('mime_type is ' + str2[1]);\n\n        this.fileOpener.open(this.file.externalRootDirectory + '/' + STORAGE_DIRECTORY + '/' + fileName, str2[1])\n              .then(() => console.log('File is opened'))\n              .catch(e => console.log('Error opening file', e));\n      });\n    });\n  }\n\n  deleteDoc(pos){\n    return new Promise((resolve, reject) => {\n      this.docs.splice(pos, 1);\n      resolve(true);\n    });\n  }\n\n  public checkPermissions(): Promise<any> {\n        console.log('Requesting Android Permissions');\n        return new Promise((resolve, reject) => {\n            this.androidPermissions.requestPermissions(this.ANDROID_PERMISSIONS)\n                .then(() => {\n                  const promisesArray: Promise<any> [] = [];\n                  this.ANDROID_PERMISSIONS.forEach((permission) => {\n                    console.log('Checking ', permission);\n                    promisesArray.push(this.androidPermissions.checkPermission(permission));\n                  });\n                  Promise.all(promisesArray).then((responses) => {\n                    let allHasPermissions = true;\n                    responses.forEach((response, i) => {\n                        allHasPermissions =  response.hasPermission;\n                        if (!allHasPermissions) {\n                          reject(\n                            new Error(\n                              'Permissions denied: ' + this.ANDROID_PERMISSIONS[i]\n                            ));\n                        }\n                    });\n                    resolve();\n                  }).catch((err) => { console.log(err); });\n                })\n                .catch((err) => console.error('Error requesting permissions: ', err));\n        });\n    }\n\n    destroyAll(){\n      this.uploading = false;\n      this.images = [];\n      this.docs = [];\n      this.currentFileType = new String();\n    }\n\n    getChatstatus(chats, members){\n      return new Promise((resolve, reject) => {\n        if(!this.user_id){\n          reject('Not Logged In');\n        }\n        else{\n          let member = members.filter(m => m.memberid == this.user_id);\n          console.log('MEMBER', member)\n          if(member.length && (member[0].accepted == false)){\n            resolve(true); \n          }\n          if(member.length && (member[0].accepted == true)){\n            resolve(false); \n          }\n        }\n      });\n    }\n\n    acceptGroup(gid){\n      return new Promise((resolve, reject) => {\n        let postdata = {\n          \"id\" : gid,\n          \"mid\" : this.user_id\n        }\n    \n        this.groupService.acceptgroup(postdata).subscribe((res) => {\n          console.log('RESPONSE', res);\n          resolve(true)\n        }, err => {\n          reject(err)\n        });\n      });\n    }\n\n    rejectGroup(gid){\n      return new Promise((resolve, reject) => {\n        var data = {\n          member: this.user_id\n        }\n        this.groupService.removeMember(data, gid).subscribe(res => {\n          console.log(res);\n          resolve(res);\n        },\n        err => {\n          reject(err)\n        });\n      });\n    }\n\n    downloadFile(file){\n      console.log('FILE', file)\n      var name = file;\n      return new Promise((resolve, reject) => {\n        const fileTransfer: FileTransferObject = this.transfer.create();\n        if (this.platform.is('cordova')) {\n          this.file.checkDir(this.file.externalRootDirectory, STORAGE_DIRECTORY)\n          .then(\n            // Directory exists, check for file with the same name\n            _ => this.checkFileExists(name)\n            .then(exists => {\n              // FILE EXISTS\n              if(exists){\n                resolve(false);\n              }\n              //FILE DOES NOT EXIST\n              else {\n                fileTransfer.download('http://198.12.92.202/public/uploads/' + file, this.file.externalRootDirectory + '/' + STORAGE_DIRECTORY + '/' + name).then((entry) => {\n                  // alert('File saved in:  ' + entry.nativeURL);\n                  resolve(true);\n                })\n                .catch((err) =>{\n                  // alert('Error saving file: ' + err.message);\n                  reject(err);\n                })\n              }\n            })\n          )\n          .catch(\n            // Directory does not exists, create a new one\n            err => this.file.createDir(this.file.externalRootDirectory, STORAGE_DIRECTORY, false)\n            .then(response => {\n              // alert('New folder created:  ' + response.fullPath);\n                fileTransfer.download('http://198.12.92.202/public/uploads/' + file, this.file.externalRootDirectory + '/' + STORAGE_DIRECTORY + '/' + name).then((entry) => {\n                  // alert('File saved in : ' + entry.nativeURL);\n                  resolve(true);\n                })\n                .catch((err) =>{\n                  // alert('Error saving file:  ' + err.message);\n                  reject(err);\n                });\n          \n            }).catch(err => {\n              // alert('It was not possible to create the dir \"downloads\". Err: ' + err.message);\n              reject(err);\n            })\t\t\t\n          );\t\t\n        } else {\n          //Handle for Browser\n          resolve(false);\n        }\n      });\n    }\n\n    checkFileExists(name){\n      return new Promise((resolve, reject) => {\n        if (this.platform.is('cordova')) {\n          this.file.checkFile(this.file.externalRootDirectory, STORAGE_DIRECTORY + '/' + name)\n            .then(_ => {\n              console.log('EXISTS?', _)\n              resolve(true);\n            })\n            // File does not exist yet\n            .catch(err => {\n              resolve(false);\n          });\n        }\n        else\n          resolve(false)\n      });\n    }\n\n    public getStoredFile(name) {\n      console.log('ENTERED AND STORED NAME', name);\n      return new Promise((resolve, reject) => {\n        if (this.platform.is('cordova')) {\n          console.log('Entered');\n          this.file.resolveLocalFilesystemUrl(this.file.externalRootDirectory + '/' + STORAGE_DIRECTORY + '/' + name)\n            .then(fetchedFile => {\n              console.log('FETCHED FILE', fetchedFile);\n              if(fetchedFile.isFile)\n                var viewableFile = this.pathForImage(fetchedFile.nativeURL);\n              console.log('VIEWABLE FILE', viewableFile)\n              resolve(viewableFile);\n            })\n            .catch(err => {console.log('ERROR', err); reject(err) });\n        } else {\n          resolve(false);\n        }\n      });\n    }\n\n    findOthers(members) {\n      return new Promise((resolve, reject) => {\n        let a = members;\n        let b = []\n        a.splice(a.findIndex(e => e.memberid == this.user_id), 1);\n        a.forEach(element => {\n          b.push(element.memberid);\n        });\n        // var result = this.data.members.filter(m => m.admin == true)\n        resolve(b);\n      });\n    }\n\n    findAdmin(members) {\n      return new Promise((resolve, reject) => {\n        var result = members.filter(m => m.admin == true)\n        result.length ? resolve(result) : reject(false);\n      });\n    }\n\n    async presentToast(text) {\n      return new Promise((resolve, reject) => {\n        this.storage.get('language').then((language: any)=>{\n          // console.log(language)\n          \n          this.translate.get(text, {value: language})\n          .subscribe(async (res: any)=>{\n    \n            const toast = await this.toastCtrl.create({\n              message: res,\n              duration: 3000,\n              position: \"bottom\",\n            });\n            toast.present();\n            resolve(true);\n          });\n        })\n      })\n    }\n\n    scrollToBottom(){\n      window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight);\n    }\n\n\n}\n"],"sourceRoot":""}